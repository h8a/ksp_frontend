version: '3'

services:
  app:
    build:
      context: .
    container_name: ksp-frontend
    restart: always
    ports:
      - 8080:8080
    networks:
      - ksp

  backend:
    image: heri8a/ksp_backend:1.0.0
    container_name: ksp-employees
    restart: always
    ports:
      - 5000:5000
    environment:
      API_VERSION: v1.0.0
      SERVICE_HOST: 0.0.0.0
      SERVICE_PORT: 5000
      SERVICE_LOG_LEVEL: debug
      SERVICE_DEBUG: True
      DB: postgresql+asyncpg://test_user:test_password@db:5432/test1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ksp

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test1
    networks:
      - ksp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data


networks:
  ksp:

volumes:
  pgdata: